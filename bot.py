from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
import os

# –¢–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã
TOKEN = os.environ["8402424321:AAH-LHIMD1X_0ehxO5joFNLp8fePNYND76g"]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–¥–∞—á (–≤ –ø–∞–º—è—Ç–∏)
tasks = []

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–µ–ª.\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/add <—Ç–µ–∫—Å—Ç> ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\n"
        "/list ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏\n"
        "/done <–Ω–æ–º–µ—Ä> ‚Äî –æ—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é\n"
        "/clear ‚Äî —É–¥–∞–ª–∏—Ç—å –≤—Å—ë"
    )

async def add_task(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π: /add –ö—É–ø–∏—Ç—å —Ö–ª–µ–±")
        return
    task = " ".join(context.args)
    tasks.append({"text": task, "done": False})
    await update.message.reply_text(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {task}")

async def list_tasks(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not tasks:
        await update.message.reply_text("–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç ‚ú®")
        return
    message = "üìù –ó–∞–¥–∞—á–∏:\n\n"
    for i, t in enumerate(tasks, 1):
        mark = "‚úÖ" if t["done"] else "‚¨ú"
        message += f"{i}. {mark} {t['text']}\n"
    await update.message.reply_text(message)

async def done_task(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args or not context.args[0].isdigit():
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π: /done 1")
        return
    index = int(context.args[0]) - 1
    if 0 <= index < len(tasks):
        tasks[index]["done"] = True
        await update.message.reply_text(f"‚úÖ –ó–∞–¥–∞—á–∞ ‚Ññ{index + 1} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
    else:
        await update.message.reply_text("–ù–µ—Ç –∑–∞–¥–∞—á–∏ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º.")

async def clear_tasks(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tasks.clear()
    await update.message.reply_text("üóëÔ∏è –°–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω!")

if __name__ == "__main__":
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("add", add_task))
    app.add_handler(CommandHandler("list", list_tasks))
    app.add_handler(CommandHandler("done", done_task))
    app.add_handler(CommandHandler("clear", clear_tasks))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

